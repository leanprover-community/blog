<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lean community blog (Posts about New in mathlib)</title><link>https://leanprover-community.github.io/blog/</link><description></description><atom:link href="https://leanprover-community.github.io/blog/categories/cat_new-in-mathlib.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;The Lean prover community&lt;/a&gt; </copyright><lastBuildDate>Tue, 12 Aug 2025 03:31:40 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Theorems about abelian categories</title><link>https://leanprover-community.github.io/blog/posts/abelian-categories/</link><dc:creator>Markus Himmel and Joël Riou</dc:creator><description>&lt;div&gt;&lt;p&gt;Two significant results about abelian categories have recently been
added to mathlib. The first is that any Grothendieck
abelian category has enough injectives, and it follows from a
general construction known as the small object argument. The second
is the Freyd-Mitchell theorem which states that any abelian
category admits a fully faithful exact functor to a category
of modules.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/abelian-categories/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/abelian-categories/</guid><pubDate>Tue, 17 Jun 2025 09:15:00 GMT</pubDate></item><item><title>Modular forms</title><link>https://leanprover-community.github.io/blog/posts/modular-forms/</link><dc:creator>Chris Birkbeck</dc:creator><description>&lt;div&gt;&lt;p&gt;In &lt;a href="https://github.com/leanprover-community/mathlib/pull/13250"&gt;PR# 13250&lt;/a&gt; we define modular forms and cusp forms, and prove that they form complex vector spaces. These are analytic functions of number theoretic interest with strong links to geometry, representation theory and analysis. Most famously they are a key ingredient in the proof of Fermat's Last Theorem. In this post we discuss the formalization process, motivate some design choices and map out some future work.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/modular-forms/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/modular-forms/</guid><pubDate>Wed, 21 Dec 2022 11:41:21 GMT</pubDate></item><item><title>Classification of one-dimensional isocrystals</title><link>https://leanprover-community.github.io/blog/posts/classification-of-one-dimensional-isocrystals/</link><dc:creator>Robert Y. Lewis, Heather Macbeth</dc:creator><description>&lt;div&gt;&lt;p&gt;Last year, there was a &lt;a href="https://leanprover-community.github.io/blog/posts/semilinear-maps"&gt;big mathlib refactor&lt;/a&gt; to replace linear maps throughout the library with  &lt;em&gt;semilinear maps&lt;/em&gt;,
a more abstract concept which, importantly, unifies linear and conjugate-linear maps.&lt;/p&gt;
&lt;p&gt;But this is not the full extent of the generalization!  Our number theorist friends here in mathlib told us that we should
make sure we chose this full generality of &lt;em&gt;semilinear&lt;/em&gt; maps, maps $f:M \to N$ such that $f(ax)=\sigma(a)f(x)$ for some ring homomorphism $\sigma$ between the scalar rings of the modules $M$ and $N$.  So we and our coauthor Frédéric Dupuis implemented this full generality, and then asked them for an example to illustrate their need for this more abstract definition. This blog post tells the story of our little adventure in number theory.&lt;/p&gt;
&lt;p&gt;It turns out that the standard use of semilinear maps in number theory is for &lt;em&gt;Frobenius-semilinearity&lt;/em&gt;, semilinearity with
respect to the ring homomorphism of the fraction field of the $p$-typical Witt vectors over a perfect characteristic-$p$ integral domain which is induced by the Frobenius
automorphism of that domain.  Let's backtrack to catch everyone up...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/classification-of-one-dimensional-isocrystals/"&gt;Read more…&lt;/a&gt; (13 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/classification-of-one-dimensional-isocrystals/</guid><pubDate>Sat, 06 Aug 2022 04:30:08 GMT</pubDate></item><item><title>The ring of integers of a cyclotomic field</title><link>https://leanprover-community.github.io/blog/posts/the-ring-of-integers-of-a-cyclotomic-field/</link><dc:creator>Riccardo Brasca</dc:creator><description>&lt;div&gt;&lt;p&gt;In &lt;a href="https://github.com/leanprover-community/mathlib/pull/13585"&gt;PR #13585&lt;/a&gt; we compute the
discriminant of cyclotomic fields. This is an important result, usually treated in a first year
graduate course in number theory. In this post we would like to explain why it is an important
result, and briefly explain how we proved it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/the-ring-of-integers-of-a-cyclotomic-field/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/the-ring-of-integers-of-a-cyclotomic-field/</guid><pubDate>Fri, 17 Jun 2022 20:24:12 GMT</pubDate></item><item><title>Adventure 10000</title><link>https://leanprover-community.github.io/blog/posts/adventure-10000/</link><dc:creator>Yury Kudryashov</dc:creator><description>&lt;div&gt;&lt;p&gt;About a month ago, the &lt;a href="https://en.wikipedia.org/wiki/Cauchy%27s_integral_theorem"&gt;Cauchy integral
theorem&lt;/a&gt;
for some simple domains
&lt;a href="https://github.com/leanprover-community/mathlib/pull/10000"&gt;landed&lt;/a&gt;
in mathlib. PR number 10000 was specially allocated for this occasion
in advance. In this post I will recollect the events that led to this
formalization.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/adventure-10000/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/adventure-10000/</guid><pubDate>Thu, 10 Feb 2022 16:46:20 GMT</pubDate></item><item><title>Semilinear maps</title><link>https://leanprover-community.github.io/blog/posts/semilinear-maps/</link><dc:creator>Frédéric Dupuis</dc:creator><description>&lt;div&gt;&lt;p&gt;Since linear maps appear everywhere in mathematics, it comes as no surprise that they have been part of mathlib for quite some time. However, as we were working on adding the basics of functional analysis to mathlib, a drawback quickly became apparent: conjugate-linear maps could not directly be expressed as linear maps. This meant that some constructions could not be formulated in their most natural way: for example, the map that takes an operator to its adjoint on a complex Hilbert space is a conjugate linear map, and so is the Riesz representation that maps a vector to its dual. This was also preventing us from developing the orthogonal group, the unitary group, etc, properly.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/semilinear-maps/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/semilinear-maps/</guid><pubDate>Sat, 11 Dec 2021 11:00:00 GMT</pubDate></item><item><title>Contributions to mathlib from LTE about normed groups</title><link>https://leanprover-community.github.io/blog/posts/contributions-to-mathlib-from-lte-about-normed-groups/</link><dc:creator>Riccardo Brasca</dc:creator><description>&lt;div&gt;&lt;p&gt;When the &lt;a href="https://github.com/leanprover-community/lean-liquid/"&gt;Liquid Tensor Experiment&lt;/a&gt; started,
in December 2020, mathlib already
&lt;a href="https://github.com/leanprover-community/mathlib/tree/c5009dd7140cf6ae53bf4ddeb57992eb10053b0b/src/analysis/normed_space"&gt;had&lt;/a&gt;
a decent theory of normed spaces. With this post I want to show how mathlib can benefit
from projects like &lt;a href="https://github.com/leanprover-community/lean-liquid/"&gt;LTE&lt;/a&gt;, showing what we added
to the theory of normed spaces in almost one year of work (this is only a small part of what has
been added to mathlib from &lt;a href="https://github.com/leanprover-community/lean-liquid/"&gt;LTE&lt;/a&gt;, for a more
complete list, see the history of &lt;a href="https://github.com/leanprover-community/lean-liquid/commits/master/src/for_mathlib"&gt;for_mathlib&lt;/a&gt;
folder).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/contributions-to-mathlib-from-lte-about-normed-groups/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/contributions-to-mathlib-from-lte-about-normed-groups/</guid><pubDate>Tue, 02 Nov 2021 09:04:21 GMT</pubDate></item><item><title>The Radon-Nikodym theorem in Lean</title><link>https://leanprover-community.github.io/blog/posts/the-radon-nikodym-theorem-in-lean/</link><dc:creator>Kexing Ying</dc:creator><description>&lt;div&gt;&lt;p&gt;I have for the past two months been working on formalising the Radon-Nikodym theorem 
in Lean, and with &lt;a href="https://github.com/leanprover-community/mathlib/pull/9065"&gt;PR #9065&lt;/a&gt; 
merged into mathlib, this journey seems to have finally come to an end. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/the-radon-nikodym-theorem-in-lean/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/the-radon-nikodym-theorem-in-lean/</guid><pubDate>Wed, 22 Sep 2021 10:51:14 GMT</pubDate></item><item><title>Continuous partitions of unity</title><link>https://leanprover-community.github.io/blog/posts/continuous-partitions-of-unity/</link><dc:creator>Patrick Massot</dc:creator><description>&lt;div&gt;&lt;p&gt;In &lt;a href="https://github.com/leanprover-community/mathlib/pull/8281"&gt;PR #8281&lt;/a&gt;, Yury
Kudryashov completed his work on continuous and smooth partitions of unity.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/continuous-partitions-of-unity/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/continuous-partitions-of-unity/</guid><pubDate>Sat, 07 Aug 2021 19:49:56 GMT</pubDate></item></channel></rss>
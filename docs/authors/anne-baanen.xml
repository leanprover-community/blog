<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lean community blog (Posts by Anne Baanen)</title><link>https://leanprover-community.github.io/blog/</link><description></description><atom:link href="https://leanprover-community.github.io/blog/authors/anne-baanen.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;The Lean prover community&lt;/a&gt; </copyright><lastBuildDate>Fri, 08 Aug 2025 07:13:53 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Dedekind domains and class number in Lean</title><link>https://leanprover-community.github.io/blog/posts/dedekind-domains-and-class-number-in-lean/</link><dc:creator>Anne Baanen</dc:creator><description>&lt;div&gt;&lt;p&gt;Pull request &lt;a href="https://github.com/leanprover-community/mathlib/pull/9071"&gt;#9701&lt;/a&gt; marks the completion of a string of additions to mathlib centered around formalizing Dedekind domains and class groups of global fields (those words will be explained below). Previous PRs had shown that nonzero ideals of a Dedekind domain factor uniquely into prime ideals, and had defined class groups in some generality. The main result in this PR is the finiteness of the class group of a global field (and in particular of the ring of integers of a number field).
Formalizing these subjects has been one of my long-term goals for mathlib,
and as far as we are aware, Lean is the first system in which this level of algebraic number theory is available.
These formalizations have been joint work:
most notable contributors on the Lean side were Ashvni Narayanan, Filippo Nuccio and myself,
with Sander Dahmen developing a new finiteness proof of the class group specially for this project.
Of course, we could not have done this without the assistance of the entire mathlib community.
Sander, Ashvni, Filippo and I wrote &lt;a href="https://github.com/lean-forward/class-number"&gt;a paper&lt;/a&gt; on the formalization project for the &lt;a href="http://easyconferences.eu/itp2021/"&gt;ITP 2021&lt;/a&gt; conference;
this blog post goes through the highlights of the paper.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/dedekind-domains-and-class-number-in-lean/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/dedekind-domains-and-class-number-in-lean/</guid><pubDate>Mon, 22 Nov 2021 07:00:00 GMT</pubDate></item></channel></rss>